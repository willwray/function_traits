# We don't care about the language here, except that setting
# language: cpp will override our CC and CXX env variables below
# and we do not want that !
language: Ruby

dist: xenial
sudo: required

addons:
  apt:
    packages:
      - python3-pip
      - meson

matrix:
    include:
    ##############
    # GCC
    ##############
    - os: linux
      compiler: gcc
      env: GCC_VERSION=8
        - CC=gcc-8
        - CXX=g++-8
        - CXX_STANDARD=17
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8']
    - os: linux
      compiler: gcc
      env: GCC_VERSION=7
        - CC=gcc-7
        - CXX=g++-7
        - CXX_STANDARD=17
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-7']

    ##############
    # CLANG
    ##############
    - os: linux
      compiler: clang
      env: CLANG_VERSION=7
        - CC=clang-7
        - CXX=clang++-7
        - CXX_STANDARD=17
      addons:
        apt:
          sources: ['llvm-toolchain-xenial', 'llvm-toolchain-xenial-7', 'ubuntu-toolchain-r-test']
          packages: ['clang-7', 'libc++-7-dev', 'libc++abi-7-dev']

    ##############
    # OSX / APPLECLANG
    ##############
    - os: osx
      osx_image: xcode10
      env:
        - CXX=clang
        - OSX=1
        - CXX_STANDARD=17

before_install:
  - echo "Before install"
  - |
    git submodule init
    git submodule update --remote
  - |
    if [ "${CLANG_VERSION}" == "7" ]; then
      export CXXFLAGS="-stdlib=libc++"
    fi

install:
  - mkdir -p build

  script:
  - which $CXX
  - $CXX --version
  - mkdir build
  - meson build
  - cd build
  - ninja

